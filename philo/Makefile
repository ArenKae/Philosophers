### COLORS ###
DEF_COLOR = \033[0;39m
GRAY = \033[0;90m
RED = \033[0;91m
GREEN = \033[0;92m
YELLOW = \033[0;93m
BLUE = \033[0;94m
MAGENTA = \033[0;95m
CYAN = \033[0;96m
WHITE = \033[0;97m


### VARIABLES ###

NAME = philo
CC = gcc
CFLAGS += -Wall -Wextra -Werror
# ThreadSanitizer flag :    -fsanitize=thread
HEADER 	= philosophers.h
OBJF = .cache_exists	# needed to create obj/ directory
.DEFAULT_GOAL := all	# make = make all
update_flag := false

# Directories
SRC_DIR = src/
OBJ_DIR = obj/

# Source Files
SRC_FILES = main.c arg_check.c routine.c forks.c death.c meal_loop.c utils.c libft.c

# Object Files
OBJ = $(addprefix $(OBJ_DIR), $(SRC_FILES:.c=.o))


### COMPILATION ###

$(OBJF):
	@mkdir -p $(OBJ_DIR)

# Creating object files (.o) from source files (.c) inside the OBJ_DIR directory.
# The option -o indicates the name of the outpout, the option -c indicates the source that is used.

$(OBJ_DIR)%.o : $(SRC_DIR)%.c $(HEADER) | $(OBJF)
	@echo "$(YELLOW)Compiling $<...$(DEF_COLOR)"
	@$(CC) $(CFLAGS) -c $< -o $@

# Compiling all objets files (.o) to a file "NAME" :
$(NAME) : $(OBJ)
	@$(CC) $(CFLAGS) $^ -o $@
	@echo " "
	@echo "$(GREEN)-> Philosophers compiled!$(DEF_COLOR)"
	@echo " "
	@$(eval update_flag := true)


### RULES ##

nothing_to_be_done:
	@if [ "$(update_flag)" = "false" ]; then \
		echo "$(GREEN)-> make: Nothing to be done for 'all'.$(DEF_COLOR)"; \
	fi

all: $(NAME) nothing_to_be_done

# Flag to check if 'clean' is executed alone or as a dependency of 'fclean'
fclean_flag := false
do_fclean:
	@$(eval fclean_flag := true)

clean:
	@echo "$(YELLOW)Cleaning philosophers... $(DEF_COLOR)"
	@echo " "
	@rm -rf $(OBJ_DIR)
	@if [ "$(fclean_flag)" = "false" ]; then \
		echo "$(GREEN)-> Philosophers object files cleaned!$(DEF_COLOR)"; \
    fi
	@if [ "$(fclean_flag)" = "true" ]; then \
		echo "$(GREEN)-> Philosophers object files & executables cleaned!$(DEF_COLOR)"; \
    fi
	@echo " "

fclean: do_fclean clean
	@rm -f $(NAME)

# I always do this typo...
flcean: fclean

re:	fclean all
	@echo "$(BLUE)-> Cleaned and rebuilt everything for Philosophers!$(DEF_COLOR)"

# Phony targets are used to differenciate makefile rules from system files.
.PHONY: all clean fclean re flcean

### MEMO ###
# 	Sp√©cial variables :
#		$@	Represents the target file that is being generated by the rule
#		$<	Represents the first dependency of the rule
#		$^	Represents all the dependencies of the rule, separated by spaces.
#		$?	Represents a list of dependencies that are newer than the target file.
#		$*	Represents the stem of the target filename (without the extension)